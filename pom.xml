<!--
  ~ Copyright 2020 Uppsala University Library
  ~
  ~ This file is part of Cora.
  ~
  ~     Cora is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU General Public License as published by
  ~     the Free Software Foundation, either version 3 of the License, or
  ~     (at your option) any later version.
  ~
  ~     Cora is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU General Public License for more details.
  ~
  ~     You should have received a copy of the GNU General Public License
  ~     along with Cora.  If not, see <http://www.gnu.org/licenses/>.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>se.uu.ub.cora</groupId>
		<artifactId>cora-parent</artifactId>
		<version>1.1.1</version>
	</parent>

	<artifactId>cora-docker-tomcat</artifactId>
	<packaging>pom</packaging>
	<version>1.1-SNAPSHOT</version>
	<name>Cora docker for Tomcat</name>

	<properties>
		<outputDirectory>${project.build.directory}/docker2</outputDirectory>
		<exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
		<cora-docker-tomcat.version>1.0-SNAPSHOT</cora-docker-tomcat.version>
		
	</properties>

	<scm>
		<connection>scm:git:https://github.com/lsu-ub-uu/cora-docker-tomcat.git</connection>
		<developerConnection>scm:git:https://github.com/lsu-ub-uu/cora-docker-tomcat.git</developerConnection>
		<url>https://github.com/lsu-ub-uu/cora-docker-tomcat.git</url>
	  <tag>HEAD</tag>
  </scm>

	<dependencies>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
<!-- 							<outputDirectory>${project.basedir}</outputDirectory> -->
							<outputDirectory>${outputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>docker</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> -->
			<!-- <groupId>com.spotify</groupId> -->
			<!-- <artifactId>dockerfile-maven-plugin</artifactId> -->
			<!-- <configuration> -->
			<!-- <contextDirectory>${outputDirectory}</contextDirectory> -->
			<!-- <repository>cora-docker-tomcat</repository> -->

			<!-- </configuration> -->
			<!-- </plugin> -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${exec-maven-plugin.version}</version>
				<executions>
<!-- 					Remove existing image from local repo -->
<!-- 					<execution> -->
<!-- 						<id>docker-clean</id> -->
<!-- 						<phase>install</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>exec</goal> -->
<!-- 						</goals> -->
<!-- 						<configuration> -->
<!-- 							<executable>docker</executable> -->
<!-- 							<workingDirectory>${project.basedir}</workingDirectory> -->
<!-- 							<arguments> -->
<!-- 								<argument>rmi</argument> -->
<!-- 								<argument>${project.groupId}/${project.artifactId}:${project.version}</argument> -->
<!-- 							</arguments> -->
<!-- 						</configuration> -->
<!-- 					</execution> -->

					<!-- Create new docker image using Dockerfile which must be present 
						in current working directory. Tag the image using maven project version information. -->
					<execution>
						<id>docker-build</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>docker</executable>
<!-- 							<workingDirectory>${project.basedir}</workingDirectory> -->
							<workingDirectory>${outputDirectory}</workingDirectory>
							<arguments>
								<argument>build</argument>
								<argument>-t</argument>
								<argument>${project.artifactId}:${project.version}</argument>
								<argument>--build-arg</argument>
								<argument>CORA_DOCKER_VERSION=${cora-docker-tomcat.version}</argument>
								<argument>.</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Login and Push the image to a docker repo. -->
<!-- 					<execution> -->
<!-- 						<id>docker-login</id> -->
<!-- 						<phase>deploy</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>exec</goal> -->
<!-- 						</goals> -->
<!-- 						<configuration> -->
<!-- 							<executable>docker</executable> -->
<!-- 							<workingDirectory>${outputDirectory}</workingDirectory> -->
<!-- 							<arguments> -->
<!-- 								<argument>login</argument> -->
<!-- 								<argument>-u</argument> -->
<!-- 								<argument>${docker.user}</argument> -->
<!-- 								<argument>-p</argument> -->
<!-- 								<argument>${docker.password}</argument> -->
<!-- 								<argument>${docker.url}</argument> -->
<!-- 							</arguments> -->
<!-- 						</configuration> -->
<!-- 					</execution> -->
<!-- 					<execution> -->
<!-- 						<id>docker-push</id> -->
<!-- 						<phase>deploy</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>exec</goal> -->
<!-- 						</goals> -->
<!-- 						<configuration> -->
<!-- 							<executable>docker</executable> -->
<!-- 							<workingDirectory>${outputDirectory}</workingDirectory> -->
<!-- 							<arguments> -->
<!-- 								<argument>push</argument> -->
<!-- 								<argument>${project.groupId}/${project.artifactId}:${project.version}</argument> -->
<!-- 							</arguments> -->
<!-- 						</configuration> -->
<!-- 					</execution> -->
				</executions>
			</plugin>
		</plugins>
	</build>
</project>